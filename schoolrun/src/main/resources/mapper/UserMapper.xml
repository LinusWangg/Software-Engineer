<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.repository.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.User">
    <constructor>
      <arg column="userCount" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userPassword" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userID" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Phonenum" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="userSchool" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <insert id="insert" parameterType="com.example.demo.model.User">
    insert into user (userCount, userPassword, userID, 
      userName, userType, Phonenum, 
      userSchool)
    values (#{usercount,jdbcType=VARCHAR}, #{userpassword,jdbcType=VARCHAR}, #{userid,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{usertype,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR}, 
      #{userschool,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="usercount != null">
        userCount,
      </if>
      <if test="userpassword != null">
        userPassword,
      </if>
      <if test="userid != null">
        userID,
      </if>
      <if test="username != null">
        userName,
      </if>
      <if test="usertype != null">
        userType,
      </if>
      <if test="phonenum != null">
        Phonenum,
      </if>
      <if test="userschool != null">
        userSchool,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="usercount != null">
        #{usercount,jdbcType=VARCHAR},
      </if>
      <if test="userpassword != null">
        #{userpassword,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="userschool != null">
        #{userschool,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <sql id="Base_Column_List">
    userCount, userPassword, userID, userName, userType, Phonenum, userSchool
  </sql>
  <select id="findbycount" parameterType="String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userCount = #{usercount,jdbcType=VARCHAR}
  </select>
  <update id="updateUser" parameterType="com.example.demo.model.User">
        update user
        <set>
            <if test="userid != null">userID = #{userid,jdbcType=VARCHAR},</if>
            <if test="username != null">userName = #{username,jdbcType=VARCHAR},</if>
            <if test="phonenum != null">Phonenum = #{phonenum,jdbcType=VARCHAR},</if>
            <if test="userschool != null">userSchool = #{userschool,jdbcType=VARCHAR},</if>
            userType = #{usertype,jdbcType=VARCHAR},
        </set>
        where userCount = #{usercount,jdbcType=VARCHAR}
  </update>
  <update id="modifyUser" parameterType="com.example.demo.model.User">
        update user
        <set>
            userPassword = #{modify_userpassword,jdbcType=VARCHAR},
        </set>
        where userCount = #{usercount,jdbcType=VARCHAR}
  </update>
</mapper>